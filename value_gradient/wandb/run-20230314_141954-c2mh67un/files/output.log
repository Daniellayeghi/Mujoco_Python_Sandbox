
Creating window glfw
Epochs: 1, Loss: 1161584896.0, lr: 0.004, time: 75
Epochs: 2, Loss: 1151581952.0, lr: 0.004, time: 75
Epochs: 3, Loss: 1145608832.0, lr: 0.004, time: 75
Epochs: 4, Loss: 1139548800.0, lr: 0.004, time: 75
Epochs: 5, Loss: 1133390080.0, lr: 0.004, time: 75
Epochs: 6, Loss: 1127169920.0, lr: 0.004, time: 75
Epochs: 7, Loss: 1120855936.0, lr: 0.004, time: 75
Epochs: 8, Loss: 1114452608.0, lr: 0.004, time: 75
Epochs: 9, Loss: 1107966720.0, lr: 0.004, time: 75
Epochs: 10, Loss: 1101346944.0, lr: 0.004, time: 75
Epochs: 11, Loss: 1094592512.0, lr: 0.004, time: 75
Epochs: 12, Loss: 1087727232.0, lr: 0.004, time: 75
Epochs: 13, Loss: 1080601216.0, lr: 0.004, time: 75
Epochs: 14, Loss: 1073265728.0, lr: 0.004, time: 75
Epochs: 15, Loss: 1065712704.0, lr: 0.004, time: 75
Epochs: 16, Loss: 1058066432.0, lr: 0.004, time: 75
Epochs: 17, Loss: 1050064320.0, lr: 0.004, time: 75
Epochs: 18, Loss: 1041763520.0, lr: 0.004, time: 75
Epochs: 19, Loss: 1033158720.0, lr: 0.004, time: 75
Epochs: 20, Loss: 1024190272.0, lr: 0.004, time: 75
Epochs: 21, Loss: 1014897600.0, lr: 0.004, time: 75
Epochs: 22, Loss: 1005225920.0, lr: 0.004, time: 75
Epochs: 23, Loss: 995440832.0, lr: 0.004, time: 75
Epochs: 24, Loss: 984858688.0, lr: 0.004, time: 75
Epochs: 25, Loss: 973691200.0, lr: 0.004, time: 75
Epochs: 26, Loss: 962072448.0, lr: 0.004, time: 75
Epochs: 27, Loss: 950114496.0, lr: 0.004, time: 75
Epochs: 28, Loss: 937844928.0, lr: 0.004, time: 75
Epochs: 29, Loss: 925283968.0, lr: 0.004, time: 75
Epochs: 30, Loss: 912569152.0, lr: 0.004, time: 75
Epochs: 31, Loss: 898975424.0, lr: 0.004, time: 75
Epochs: 32, Loss: 885117504.0, lr: 0.004, time: 75
Epochs: 33, Loss: 870998656.0, lr: 0.004, time: 75
Epochs: 34, Loss: 856504960.0, lr: 0.004, time: 75
Epochs: 35, Loss: 841468032.0, lr: 0.004, time: 75
Epochs: 36, Loss: 825797248.0, lr: 0.004, time: 75
########## Saving Trace ##########
Traceback (most recent call last):
  File "tv_value_synthesis_trajopt_cartpole.py", line 223, in <module>
    loss.backward()
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/_tensor.py", line 488, in backward
    self, gradient, retain_graph, create_graph, inputs=inputs
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/autograd/__init__.py", line 199, in backward
    allow_unreachable=True, accumulate_grad=True)  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "tv_value_synthesis_trajopt_cartpole.py", line 262, in <module>
    model_scripted = torch.jit.script(dyn_system.value_func.to('cpu'))  # Export to TorchScript
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_script.py", line 1287, in script
    obj, torch.jit._recursive.infer_methods_to_compile
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 476, in create_script_module
    return create_script_module_impl(nn_module, concrete_type, stubs_fn)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 542, in create_script_module_impl
    create_methods_and_properties_from_stubs(concrete_type, method_stubs, property_stubs)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 393, in create_methods_and_properties_from_stubs
    concrete_type._create_methods_and_properties(property_defs, property_rcbs, method_defs, method_rcbs, method_defaults)
RuntimeError:
attribute lookup is not defined on python value of type 'SimulationParams':
  File "tv_value_synthesis_trajopt_cartpole.py", line 75
    def forward(self, t, x):
        time = torch.ones((sim_params.nsim, 1, 1)).to(device) * t
                           ~~~~~~~~~~~~~~~ <--- HERE
        aug_x = torch.cat((x, time), dim=2)
        return self.nn(aug_x)