Creating window glfw
Epochs: 1, Loss: 9954568192.0, lr: 0.009940030040090253, time: 40
Epochs: 2, Loss: 9776261120.0, lr: 0.009880120321448116, time: 40
Epochs: 3, Loss: 9342901248.0, lr: 0.009820271087351824, time: 40
Epochs: 4, Loss: 8926600192.0, lr: 0.009760482583301363, time: 40
Epochs: 5, Loss: 14163570688.0, lr: 0.009700755057050188, time: 61
Epochs: 6, Loss: 14206994432.0, lr: 0.009641088758637567, time: 61
Epochs: 7, Loss: 14089024512.0, lr: 0.00958148394042156, time: 61
Epochs: 8, Loss: 13857126400.0, lr: 0.009521940857112636, time: 61
Epochs: 9, Loss: 13561137152.0, lr: 0.009462459765807965, time: 61
Epochs: 10, Loss: 13611313152.0, lr: 0.00940304092602639, time: 74
Epochs: 11, Loss: 13129840640.0, lr: 0.009343684599744093, time: 74
Epochs: 12, Loss: 12598183936.0, lr: 0.009284391051430982, time: 74
Epochs: 13, Loss: 11992535040.0, lr: 0.00922516054808782, time: 74
Epochs: 14, Loss: 11364702208.0, lr: 0.009165993359284084, time: 74
Epochs: 15, Loss: 11494761472.0, lr: 0.009106889757196639, time: 84
Epochs: 16, Loss: 10941989888.0, lr: 0.009047850016649154, time: 84
Epochs: 17, Loss: 10452689920.0, lr: 0.008988874415152377, time: 84
Epochs: 18, Loss: 10034673664.0, lr: 0.008929963232945216, time: 84
Epochs: 19, Loss: 9566365696.0, lr: 0.008871116753036697, time: 84
Epochs: 20, Loss: 11419877376.0, lr: 0.008812335261248791, time: 92
Epochs: 21, Loss: 11329461248.0, lr: 0.008753619046260144, time: 92
Epochs: 22, Loss: 11248315392.0, lr: 0.00869496839965074, time: 92
Epochs: 23, Loss: 11220386816.0, lr: 0.008636383615947521, time: 92
Epochs: 24, Loss: 11198606336.0, lr: 0.00857786499267097, time: 92
Epochs: 25, Loss: 15656127488.0, lr: 0.008519412830382721, time: 99
Epochs: 26, Loss: 15159123968.0, lr: 0.008461027432734181, time: 99
Epochs: 27, Loss: 14310416384.0, lr: 0.008402709106516233, time: 99
Epochs: 28, Loss: 13089760256.0, lr: 0.008344458161710002, time: 99
Epochs: 29, Loss: 11807970304.0, lr: 0.008286274911538785, time: 99
Epochs: 30, Loss: 14377654272.0, lr: 0.008228159672521091, time: 105
Epochs: 31, Loss: 12108130304.0, lr: 0.008170112764524893, time: 105
Epochs: 32, Loss: 9893092352.0, lr: 0.008112134510823083, time: 105
Epochs: 33, Loss: 8087547392.0, lr: 0.008054225238150201, time: 105
Epochs: 34, Loss: 7299554816.0, lr: 0.007996385276760424, time: 105
Epochs: 35, Loss: 8626453504.0, lr: 0.007938614960486916, time: 110
Epochs: 36, Loss: 8047462400.0, lr: 0.00788091462680252, time: 110
Epochs: 37, Loss: 7753872896.0, lr: 0.007823284616881854, time: 110
Epochs: 38, Loss: 7573296128.0, lr: 0.007765725275664881, time: 110
Epochs: 39, Loss: 7511249408.0, lr: 0.007708236951921931, time: 110
Epochs: 40, Loss: 9557695488.0, lr: 0.007650819998320297, time: 115
Epochs: 41, Loss: 9410480128.0, lr: 0.007593474771492367, time: 115
Epochs: 42, Loss: 9266378752.0, lr: 0.007536201632105431, time: 115
Epochs: 43, Loss: 9097531392.0, lr: 0.007479000944933124, time: 115
Epochs: 44, Loss: 8996042752.0, lr: 0.007421873078928632, time: 115
Epochs: 45, Loss: 10814386176.0, lr: 0.007364818407299646, time: 119
Epochs: 46, Loss: 10658367488.0, lr: 0.007307837307585186, time: 119
Epochs: 47, Loss: 10762432512.0, lr: 0.007250930161734293, time: 119
Epochs: 48, Loss: 10992363520.0, lr: 0.00719409735618669, time: 119
Epochs: 49, Loss: 11041667072.0, lr: 0.007137339281955456, time: 119
Epochs: 50, Loss: 13404321792.0, lr: 0.007080656334711765, time: 123
Epochs: 51, Loss: 13594873856.0, lr: 0.007024048914871794, time: 123
Epochs: 52, Loss: 13533241344.0, lr: 0.006967517427685831, time: 123
Epochs: 53, Loss: 13326911488.0, lr: 0.006911062283329664, time: 123
Epochs: 54, Loss: 13043135488.0, lr: 0.006854683896998351, time: 123
Epochs: 55, Loss: 15034643456.0, lr: 0.006798382689002409, time: 127
Epochs: 56, Loss: 14566284288.0, lr: 0.006742159084866536, time: 127
Epochs: 57, Loss: 14168786944.0, lr: 0.006686013515430926, time: 127
########## Saving Trace ##########
Traceback (most recent call last):
  File "tv_value_synthesis_trajopt_cartpole.py", line 201, in <module>
    loss.backward()
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/_tensor.py", line 488, in backward
    self, gradient, retain_graph, create_graph, inputs=inputs
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/autograd/__init__.py", line 199, in backward
    allow_unreachable=True, accumulate_grad=True)  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "tv_value_synthesis_trajopt_cartpole.py", line 239, in <module>
    model_scripted = torch.jit.script(dyn_system.value_func.to('cpu'))  # Export to TorchScript
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_script.py", line 1287, in script
    obj, torch.jit._recursive.infer_methods_to_compile
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 476, in create_script_module
    return create_script_module_impl(nn_module, concrete_type, stubs_fn)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 542, in create_script_module_impl
    create_methods_and_properties_from_stubs(concrete_type, method_stubs, property_stubs)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 393, in create_methods_and_properties_from_stubs
    concrete_type._create_methods_and_properties(property_defs, property_rcbs, method_defs, method_rcbs, method_defaults)
RuntimeError:
attribute lookup is not defined on python value of type 'SimulationParams':
  File "tv_value_synthesis_trajopt_cartpole.py", line 74
    def forward(self, t, x):
        time = torch.ones((sim_params.nsim, 1, 1)).to(device) * t
                           ~~~~~~~~~~~~~~~ <--- HERE
        aug_x = torch.cat((x, time), dim=2)
        return self.nn(aug_x)