Creating window glfw
Epochs: 1, Loss: 12210760704.0, lr: 0.009940030040090253, time: 54
Epochs: 2, Loss: 11657080832.0, lr: 0.009880120321448116, time: 57
Epochs: 3, Loss: 10777088000.0, lr: 0.009820271087351824, time: 60
Epochs: 4, Loss: 10111085568.0, lr: 0.009760482583301363, time: 63
Epochs: 5, Loss: 9562574848.0, lr: 0.009700755057050188, time: 66
Epochs: 6, Loss: 9065123840.0, lr: 0.009641088758637567, time: 69
Epochs: 7, Loss: 8526686720.0, lr: 0.00958148394042156, time: 71
Epochs: 8, Loss: 7878926848.0, lr: 0.009521940857112636, time: 73
Epochs: 9, Loss: 7214206976.0, lr: 0.009462459765807965, time: 75
Epochs: 10, Loss: 6510045184.0, lr: 0.00940304092602639, time: 77
Epochs: 11, Loss: 5901096448.0, lr: 0.009343684599744093, time: 79
Epochs: 12, Loss: 5400146944.0, lr: 0.009284391051430982, time: 81
Epochs: 13, Loss: 5112889856.0, lr: 0.00922516054808782, time: 83
Epochs: 14, Loss: 4866724352.0, lr: 0.009165993359284084, time: 85
Epochs: 15, Loss: 4593516032.0, lr: 0.009106889757196639, time: 87
Epochs: 16, Loss: 4414589952.0, lr: 0.009047850016649154, time: 89
Epochs: 17, Loss: 4541716480.0, lr: 0.008988874415152377, time: 91
Epochs: 18, Loss: 4813701120.0, lr: 0.008929963232945216, time: 93
Epochs: 19, Loss: 5212460544.0, lr: 0.008871116753036697, time: 95
Epochs: 20, Loss: 5857748480.0, lr: 0.008812335261248791, time: 97
Epochs: 21, Loss: 6547099136.0, lr: 0.008753619046260144, time: 99
Epochs: 22, Loss: 7373804032.0, lr: 0.00869496839965074, time: 101
Epochs: 23, Loss: 8161169408.0, lr: 0.008636383615947521, time: 103
Epochs: 24, Loss: 8884587520.0, lr: 0.00857786499267097, time: 105
########## Saving Trace ##########
Traceback (most recent call last):
  File "tv_value_synthesis_trajopt_cartpole.py", line 195, in <module>
    traj, dtraj_dt = odeint(dyn_system, x_init, time, method='euler', options=dict(step_size=dt))
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torchdiffeq_ctrl/_impl/adjoint.py", line 209, in odeint_adjoint
    adjoint_method, adjoint_options, t.requires_grad, *adjoint_params)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torchdiffeq_ctrl/_impl/adjoint.py", line 23, in forward
    ans, ans_dt = odeint(func, y0, t, rtol=rtol, atol=atol, method=method, options=options)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torchdiffeq_ctrl/_impl/odeint.py", line 57, in odeint
    solution, solution_dt = solver.integrate(t)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torchdiffeq_ctrl/_impl/solvers.py", line 72, in integrate
    dy, f0 = self._step_func(self.func, t0, dt, t1, y0)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torchdiffeq_ctrl/_impl/fixed_grid.py", line 9, in _step_func
    f0 = func(t0, y0, perturb=Perturb.NEXT if self.perturb else Perturb.NONE)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torchdiffeq_ctrl/_impl/misc.py", line 193, in forward
    return self.base_func(t, y)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torchdiffeq_ctrl/_impl/misc.py", line 193, in forward
    return self.base_func(t, y)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1208, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/home/daniel/Repos/Mujoco_Python_Sandbox/value_gradient/neural_value_synthesis_diffeq.py", line 165, in forward
    u = self._ctrl(t, x)
  File "/home/daniel/Repos/Mujoco_Python_Sandbox/value_gradient/neural_value_synthesis_diffeq.py", line 123, in hjb
    return self._policy(q, v, x, Vx)
  File "/home/daniel/Repos/Mujoco_Python_Sandbox/value_gradient/neural_value_synthesis_diffeq.py", line 88, in underactuated_inv_policy
    Ba = torch.cat((ones, (-torch.inverse(Muu) @ Mcu.mT).mT), dim=2)
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "tv_value_synthesis_trajopt_cartpole.py", line 236, in <module>
    model_scripted = torch.jit.script(dyn_system.value_func.to('cpu'))  # Export to TorchScript
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_script.py", line 1287, in script
    obj, torch.jit._recursive.infer_methods_to_compile
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 476, in create_script_module
    return create_script_module_impl(nn_module, concrete_type, stubs_fn)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 542, in create_script_module_impl
    create_methods_and_properties_from_stubs(concrete_type, method_stubs, property_stubs)
  File "/home/daniel/.local/share/virtualenvs/Mujoco_Python_Sandbox-gNKKWzd6/lib/python3.7/site-packages/torch/jit/_recursive.py", line 393, in create_methods_and_properties_from_stubs
    concrete_type._create_methods_and_properties(property_defs, property_rcbs, method_defs, method_rcbs, method_defaults)
RuntimeError:
attribute lookup is not defined on python value of type 'SimulationParams':
  File "tv_value_synthesis_trajopt_cartpole.py", line 75
    def forward(self, t, x):
        time = torch.ones((sim_params.nsim, 1, 1)).to(device) * t
                           ~~~~~~~~~~~~~~~ <--- HERE
        aug_x = torch.cat((x, time), dim=2)
        return self.nn(aug_x)